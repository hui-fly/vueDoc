(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{227:function(e,a,s){"use strict";s.r(a);var n=s(0),t=Object(n.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"如何建立自己的组件库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何建立自己的组件库"}},[e._v("#")]),e._v(" 如何建立自己的组件库")]),e._v(" "),s("p",[e._v("https://www.jb51.net/article/148692.htm")]),e._v(" "),s("h2",{attrs:{id:"npm发包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm发包"}},[e._v("#")]),e._v(" npm发包")]),e._v(" "),s("ol",[s("li",[e._v("首先你要在npmjs上注册一个账号")]),e._v(" "),s("li",[e._v("查看你的.npmrc设置，确保你的registry是www.npmjs.com/, 如果是一个其他源，可以使用nrm工具切换源")]),e._v(" "),s("li",[e._v("在终端npm login，登录你的账号")])]),e._v(" "),s("h2",{attrs:{id:"package-json字段解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package-json字段解释"}},[e._v("#")]),e._v(" package.json字段解释")]),e._v(" "),s("p",[e._v("name就是发布到npm上的包名，也即别人安装时输入的名字yarn add ${name}, 包名应该是kebab-case, 即英文单词全小写，中划线分割(lower case and dash-separated)\nversion是语义化的，major.minor.patch. 如果是major变动，通常意味着不兼容的修改; 如果是minor，意味着添加向后兼容的新功能，如果是patch, 意味着bug的修复。\ndescription是对包的描述，在npmjs.com上搜索时会显示，有助于用户在搜索时进行筛选\nkeywords 同样也是帮助用户查找到你的包\nauthor的格式一般是${your name} ${email}, 当然也可以是一个github地址\nlicense可能很多人会忽略，最好也写上去。至于用哪个，vue的官方项目全是MIT，因此我也是MIT，不纠结\nrepository的格式参考如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"repository": {\n  "type": "git",\n  "url": "https://github.com/FEMessage/el-data-table.git"\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("main定义了包的入口文件，在NodeJs环境，语句import pkg from 'package-name'时，其实导入的就是main定义的文件，它可以是CommonJs格式的, 也可以是umd格式\nscripts 为了防止出现发包前忘记构建的乌龙事件，定义一下发布前的脚本, 这样每次执行npm publish前都会先执行npm run build")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"prepublishOnly": "npm run build"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("engines 可以告诉用户运行你的包对NodeJs版本的要求，这是非常重要的，不然你使用了NodeJs新版本特性，却没有定义该字段，导致低版本NodeJs用户运行报错，让人摸不着头脑。")]),e._v(" "),s("h2",{attrs:{id:"定义依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义依赖"}},[e._v("#")]),e._v(" 定义依赖")]),e._v(" "),s("p",[e._v("当你开发一个项目时，比如一个静态网站或一个单面应用，dependencies和devDependencies并没有太多区别，因为你npm install 或 yarn时，这些依赖都会下载下来，因为你是在开发。\n但对于发布到npm的包则不同：\ndependencies 是运行你的包必须安装的依赖，即当用户yarn add my-awesome-package时，这些依赖也会下载。devDependencies 是开发你的包时需要安装的依赖，比如eslint, jest等开发工具，当用户yarn add my-awesome-package 时，这些依赖并不会下载！\npeerDependencies 一般用于开发插件的场景，它要求用户必须预先安装了某些依赖。比如开发webpack的插件，如果你把对webpack的依赖定义成dependencies, 如果用户安装的webpack跟dependencies里的minor版本不一致, 则用户yarn add my-webpack-plugin时会把dependencies定义的webpack也下载下来，也即用户会安装两个major版本相同的webpack, 这就不合适了。\n所以说，定义好你的包的依赖，可以让用户安装使用你的包时少点困惑，多些愉悦。")]),e._v(" "),s("h2",{attrs:{id:"忽略文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[e._v("#")]),e._v(" 忽略文件")]),e._v(" "),s("p",[e._v("如果有 .gitignore文件，则发布时会忽略 .gitignore中定义的文件;  也即这些文件不需要在.npmignore重新定义。如果用.gitignore忽略了dist目录，但发包时又需要发布dist目录，此时可以在package.json定义files字段，这是一个白名单，里面的文件都会被发布出去")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"files": [\n  "dist"\n]\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("需要注意的是，子文件夹.gitignore或.npmignore同样有效，而它们会覆盖files字段\n另外，有些文件无论如何设置，都不会发布出去：\nnode_modules\n.git(包括.gitignore)")]),e._v(" "),s("h2",{attrs:{id:"readme-md"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readme-md"}},[e._v("#")]),e._v(" README.md")]),e._v(" "),s("p",[e._v("别忘了这个文件，写下与包相关的更具体的信息，告诉用户这个包有哪些功能，如何使用。这很重要，用户不会使用一个没有文档说明的包！")]),e._v(" "),s("h2",{attrs:{id:"发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[e._v("#")]),e._v(" 发布")]),e._v(" "),s("p",[e._v("一个版本只能发布一次，为了避免每次手动修改package.json, 可以使用npm version [major | minor | patch]命令来更新package.json里的版本")]),e._v(" "),s("h2",{attrs:{id:"打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打标签"}},[e._v("#")]),e._v(" 打标签")]),e._v(" "),s("p",[e._v("假设你的包最新版本是1.0.0, 当用户yarn add my-awesome-package或yarn add my-awesome-package@1.0.0时，其实是相当于yarn add my-awesome-package@latest, 即不指定标签安装时，默认安装latest版本。\n假设你正在开发2.0.0版本，它还不稳定，你想发布它让用户测试一波，此时又不能让它变成latest版本，不然用户yarn add my-awesome-package时就安装了2.0.0了，那将让用户崩溃。这时该怎么办呢？\n标签就用上场了。可以这样发布")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm publish --tag beta\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("则用户 "),s("strong",[e._v("yarn add my-awesome-package")]),e._v(" 安装的是1.0.0版本， "),s("strong",[e._v("yarn add my-awesome-package@beta")]),e._v("时，安装的是2.0.0版本，不影响老用户，棒！🎉记住，你只能对一个版本打一个标签，使用npm dist-tag ls 可以查看npm包一共打了几个标签")]),e._v(" "),s("h2",{attrs:{id:"打包vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包vue"}},[e._v("#")]),e._v(" 打包Vue")]),e._v(" "),s("p",[e._v("脚手架经过一番折腾，在Vue Conf上找到一个vue组件的打包脚手架(vue官方文档也有说明)，进行“本土化”修改完善后，已在github开源：github.com/FEMessage/v…")]),e._v(" "),s("h3",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[e._v("#")]),e._v(" 说明")]),e._v(" "),s("p",[e._v("我们以开源组件"),s("a",{attrs:{href:"https://github.com/FEMessage/el-data-table",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-data-table"),s("OutboundLink")],1),e._v("为例，解释目录结构及文件\n├── README.md\n├── build\n│   └── rollup.config.js\n├── dist\n│   ├── el-data-table.esm.js\n│   ├── el-data-table.min.js\n│   └── el-data-table.umd.js\n├── docs\n│   ├── build\n│   └── index.html\n├── package.json\n├── src\n│   ├── el-data-table.vue\n│   └── index.js\n├── styleguide.config.js\n├── test\n│   └── index.test.js\n└── yarn.lock复制代码先来看三个文件:README.mdpackage.jsonyarn.lockREADME.md与package.json大家都懂，有yarn.lock因为是我们鼓励大家使用yarn,  它比npm更快。虽然npm 6.0号称提速17倍(可以想象6之前是得有多慢😂)，但经测试，还是不如yarn接下来看build, dist, src 目录├── build\n│   └── rollup.config.js\n├── dist\n│   ├── el-data-table.esm.js\n│   ├── el-data-table.min.js\n│   └── el-data-table.umd.js\n├── src\n│   ├── el-data-table.vue\n│   └── index.js复制代码build 目录下放编译时的配置文件，这个跟vue-cli 2.x生成的模板build目录作用是一样的，只不过这里放置的是rollup.config.js。至于为什么用Rollup, 一是因为配置更简单，二是因为它更适合打包类库，当源文件中有import lib from 'awesome-lib'类似的代码时，Rollup并不会把awesome-lib捆绑输出，这正是开发类库或组件需要的特性")]),e._v(" "),s("h2",{attrs:{id:"vue-use"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-use"}},[e._v("#")]),e._v(" Vue.use")]),e._v(" "),s("p",[e._v("在组件库的index.js中导出组件")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export default {\n    install\n    component1,\n    component2,\n    ...\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("在使用时 main.js中")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import XX from 'XX'\nVue.use(XX)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("其中XX即导出的对象，Vue.use会执行XX.install方法,install方法会遍历所有组件并注册到Vue中")])])}),[],!1,null,null,null);a.default=t.exports}}]);