(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{234:function(e,t,v){"use strict";v.r(t);var r=v(0),_=Object(r.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"vue路由声明周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue路由声明周期"}},[e._v("#")]),e._v(" vue路由声明周期")]),e._v(" "),v("h3",{attrs:{id:"完整的导航解析流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#完整的导航解析流程"}},[e._v("#")]),e._v(" 完整的导航解析流程")]),e._v(" "),v("ol",[v("li",[e._v("导航被触发。")]),e._v(" "),v("li",[e._v("在失活的组件里调用离开守卫。")]),e._v(" "),v("li",[e._v("调用全局的 beforeEach 守卫。")]),e._v(" "),v("li",[e._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),e._v(" "),v("li",[e._v("在路由配置里调用 beforeEnter。")]),e._v(" "),v("li",[e._v("解析异步路由组件。")]),e._v(" "),v("li",[e._v("在被激活的组件里调用 beforeRouteEnter。")]),e._v(" "),v("li",[e._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),e._v(" "),v("li",[e._v("导航被确认。")]),e._v(" "),v("li",[e._v("调用全局的 afterEach 钩子。")]),e._v(" "),v("li",[e._v("触发 DOM 更新。")]),e._v(" "),v("li",[e._v("用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。")])]),e._v(" "),v("p",[e._v("如果想要在页面初始化时候或者页面刷新时调用"),v("strong",[e._v("beforeEach")]),e._v("，beforeEach应该写在 new Vue({...})之前。\nbeforeEach是全局的，这个全局下的路由只要发生变化，都要首先执行beforeEach，但是如果跳转到全局之外的页面，例如从你的项目跳转到 http://www.baidu.com，那么它就不会被调用")])])}),[],!1,null,null,null);t.default=_.exports}}]);